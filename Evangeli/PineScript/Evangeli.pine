// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © cosccmo

// Reference : https://www.youtube.com/watch?v=gfEqy4uGe8c

//@version=5

// ver.25
strategy(title = "EMA|ADX|StochRSI|ATR",  shorttitle = "EASA", initial_capital = 1000, overlay=true,default_qty_type = strategy.percent_of_equity, default_qty_value = 100, calc_on_every_tick = true, pyramiding = 0 )
strategy.risk.allow_entry_in(strategy.direction.all)

// Inputs
var GEN = "General Settings"
enableLong = input(true, title="Enable Long?", group=GEN)
enableShort = input(true, title="Enable Short?", group=GEN)
useTextLabels = input(true, title="Display Call & Put Label?", group=GEN)

profitTargetMultiplier1 = input.float(1.0, title="Profit Target Multiplier 1", minval=0.1, inline = "11", group = GEN)
takeProfitPercentage1 = input.int(25, title="TP(%)", minval=0, inline = "11", group = GEN)
profitTargetMultiplier2 = input.float(2.0, title="Profit Target Multiplier 2", minval=0.1, inline = "22", group = GEN)
takeProfitPercentage2 = input.int(25, title="TP(%)", minval=0, inline = "22", group = GEN)
profitTargetMultiplier3 = input.float(4.0, title="Profit Target Multiplier 3", minval=0.1, inline = "33", group = GEN)

// Ensure that profitTargetMultiplier2 is greater than profitTargetMultiplier1
if profitTargetMultiplier2 < profitTargetMultiplier1
    profitTargetMultiplier2 := profitTargetMultiplier1

// Ensure that profitTargetMultiplier3 is greater than profitTargetMultiplier2
if profitTargetMultiplier3 < profitTargetMultiplier2
    profitTargetMultiplier3 := profitTargetMultiplier2

var BacktestInterval = "Back Test Interval"
useDateFilter = input.bool(true, title="Enable Backtest Time Interval", group=BacktestInterval)
backtestStartDate = input.time(timestamp("01 Jan 2024 00:00:00 UTC+8"), title="Start Time", group=BacktestInterval)
backtestEndDate = input.time(timestamp("01 May 2024 00:00:00 UTC+8"), title="End Time", group=BacktestInterval)
inTradeWindow = not useDateFilter or (time >= backtestStartDate and time < backtestEndDate)

var EMA = "EMA Settings"
emaLength = input.int(200, title="EMA Length   ", inline = "11", group = EMA)
string emaTimeFrame = input.timeframe(defval = "240", title = "EMA Timeframe", inline = "21", group = EMA)

var ADX = "ADX & DI Settings"
adxLength = input(8, title="ADX Length", inline = "11", group = ADX)
adxLensing = input.int(20, title="ADX Smoothing", minval=1, maxval=50, inline = "21", group = ADX)
adxLevel = input(50, title="ADX Level for Filter", inline = "31", group = ADX)

var RSI = "Stoch RSI Settings"
rsiKLength = input(3, title="Stochastic RSI K", inline = "11", group = RSI)
rsiDLength = input(3, title="Stochastic RSI D", inline = "21", group = RSI)
rsiLength = input(14, title="RSI Length", inline = "31", group = RSI)

var ATR = "ATR Settings"
atrLength = input(8, title="ATR Length", inline = "11", group = ATR)
atrMultiplier = input(1.5, title="ATR Multiplier for Stop Loss", inline = "21", group = ATR)
atrSmooth = input.string(title='Smoothing', defval='RMA', options=['RMA', 'SMA', 'EMA', 'WMA'], inline = "31", group = ATR)
atrSrc1 = input(high, group = ATR)
atrSrc2 = input(low, group = ATR)
// atrPriceLine = input(true, 'Show Price Lines', group = ATR)
// atrTextColor = input(color.blue, 'ATR Text Color', group = ATR)
// atrLowTextColor = input.color(color.teal, 'Low Text Color', inline='1', group = ATR)
// atrHighTextColor = input.color(color.red, 'High Text Color', inline='2', group = ATR)
// atrLowLineColor = input.color(color.teal, 'Low Line Color', inline='1', group = ATR)
// atrHighLineColor = input.color(color.red, 'High Line Color', inline='2', group = ATR)

///// EMA
ema = request.security( syminfo.tickerid, emaTimeFrame, ta.ema(close, emaLength))

///// ADX and DI
[diPlus, diMinus, adx] = ta.dmi(adxLength, adxLensing)
DX = math.abs(diPlus-diMinus) / (diPlus+diMinus)*100
adx_orig = ta.sma(DX, adxLength)

///// Stoch RSI 
rsi = ta.rsi(close, rsiLength)
rsiK = ta.sma(ta.stoch(rsi, rsi, rsi, rsiLength), rsiKLength)
rsiD = ta.sma(rsiK, rsiDLength)

///// ATR Stop Loss Finder
ma_function(source, atrLength) =>
    if atrSmooth == 'RMA'
        ta.rma(source, atrLength)
    else
        if atrSmooth == 'SMA'
            ta.sma(source, atrLength)
        else
            if atrSmooth == 'EMA'
                ta.ema(source, atrLength)
            else
                ta.wma(source, atrLength)

atr = ma_function(ta.tr(true), atrLength) * atrMultiplier
atrUpperbound = ma_function(ta.tr(true), atrLength) * atrMultiplier + atrSrc1
atrLowerbound = atrSrc2 - ma_function(ta.tr(true), atrLength) * atrMultiplier

// Buy conditions
longCondition1 = close > ema
longCondition2 = adx_orig > adxLevel
longCondition3 = ta.crossover(rsiK, rsiD) and rsiK < 20  // Entering at oversold conditions
LongCondition = (longCondition1 and longCondition2 and longCondition3)

// Sell conditions
shortCondition1 = close < ema
shortCondition2 = adx_orig > adxLevel
shortCondition3 = ta.crossunder(rsiK, rsiD) and rsiK > 80  // Entering at overbought conditions
ShortCondition = (shortCondition1 and shortCondition2 and shortCondition3)

plotshape( LongCondition and enableLong, title="Calls Label", color=color.new(color.green, 25), textcolor=useTextLabels ? color.white : color.new(color.white, 100), style=useTextLabels ? shape.labelup : shape.triangleup,     text="Calls", location=location.belowbar)     
plotshape(ShortCondition and enableShort, title="Puts Label", color=color.new(color.red, 25),   textcolor=useTextLabels ? color.white : color.new(color.white, 100), style=useTextLabels ? shape.labeldown : shape.triangledown, text="Puts",  location=location.abovebar)

var float longRiskAmount = na
var float longTakeProfitPrice1 = na
var float longTakeProfitPrice2 = na
var float longTakeProfitPrice3 = na
var float longStopLossPrice = na

var float shortRiskAmount = na
var float shortTakeProfitPrice1 = na
var float shortTakeProfitPrice2 = na
var float shortTakeProfitPrice3 = na
var float shortStopLossPrice = na

position_size = strategy.equity

// Define Long entry points
// strategy.position_size <= 0 for avoiding continous Buy condition
if inTradeWindow and LongCondition and enableLong and strategy.position_size <= 0
    // if strategy.position_size == 0
    longRiskAmount := close - atrLowerbound
    longTakeProfitPrice1 := close + ( longRiskAmount * profitTargetMultiplier1 )
    longTakeProfitPrice2 := close + ( longRiskAmount * profitTargetMultiplier2 )
    longTakeProfitPrice3 := close + ( longRiskAmount * profitTargetMultiplier3 )
    longStopLossPrice := atrLowerbound

    strategy.entry("Long", strategy.long)
    strategy.exit("Long SL / TP1", from_entry = "Long", limit = longTakeProfitPrice1, stop = longStopLossPrice, qty_percent = takeProfitPercentage1)
    strategy.exit("Long SL / TP2", from_entry = "Long", limit = longTakeProfitPrice2, stop = longStopLossPrice, qty_percent = takeProfitPercentage2)
    strategy.exit("Long SL / TP3", from_entry = "Long", limit = longTakeProfitPrice3, stop = longStopLossPrice)

    shortRiskAmount := na
    shortTakeProfitPrice1 := na
    shortTakeProfitPrice2 := na
    shortTakeProfitPrice3 := na
    shortStopLossPrice := na

if ta.change(strategy.position_size) < 0 and ta.change(strategy.closedtrades) > 0
    if low <= longStopLossPrice
        longRiskAmount := na
        longStopLossPrice := na
        longTakeProfitPrice1 := na
        longTakeProfitPrice2 := na
        longTakeProfitPrice3 := na

    if high >= longTakeProfitPrice1
        longTakeProfitPrice1 := na

    if high >= longTakeProfitPrice2
        longTakeProfitPrice1 := na
        longTakeProfitPrice2 := na
        
    if high >= longTakeProfitPrice3
        longRiskAmount := na
        longStopLossPrice := na
        longTakeProfitPrice1 := na
        longTakeProfitPrice2 := na
        longTakeProfitPrice3 := na

longAvgPrice        = plot(longStopLossPrice + longRiskAmount,    "Long AveragePrice", color.green, style = plot.style_circles, offset = 1)
longStopLossLine    = plot(longStopLossPrice,    "Long SL",  color.red,   style = plot.style_circles, offset = 1)
longTakeProfitLine1 = plot(longTakeProfitPrice1, "Long TP1", color.green, style = plot.style_circles, offset = 1)
longTakeProfitLine2 = plot(longTakeProfitPrice2, "Long TP2", #1e7020,     style = plot.style_circles, offset = 1)
longTakeProfitLine3 = plot(longTakeProfitPrice3, "Long TP3", #023f04,     style = plot.style_circles, offset = 1)
fill(longAvgPrice, longStopLossLine,    color = color.new(color.red, 80))
fill(longAvgPrice, longTakeProfitLine1, color = color.new(color.green,80))
fill(longAvgPrice, longTakeProfitLine2, color = color.new(color.green,80))
fill(longAvgPrice, longTakeProfitLine3, color = color.new(color.green,80))

// Define Short entry points
if inTradeWindow and ShortCondition and enableShort and strategy.position_size >= 0
    // if strategy.position_size == 0
    shortRiskAmount := atrUpperbound - close
    shortTakeProfitPrice1 := close - ( shortRiskAmount * profitTargetMultiplier1 )
    shortTakeProfitPrice2 := close - ( shortRiskAmount * profitTargetMultiplier2 )
    shortTakeProfitPrice3 := close - ( shortRiskAmount * profitTargetMultiplier3 )
    shortStopLossPrice := atrUpperbound

    strategy.entry("Short", strategy.short)
    strategy.exit("Short SL / TP1", from_entry = "Short", limit = shortTakeProfitPrice1, stop = shortStopLossPrice, qty_percent = takeProfitPercentage1)
    strategy.exit("Short SL / TP2", from_entry = "Short", limit = shortTakeProfitPrice2, stop = shortStopLossPrice, qty_percent = takeProfitPercentage2)
    strategy.exit("Short SL / TP3", from_entry = "Short", limit = shortTakeProfitPrice3, stop = shortStopLossPrice)

    longRiskAmount := na
    longTakeProfitPrice1 := na
    longTakeProfitPrice2 := na
    longTakeProfitPrice3 := na
    longStopLossPrice := na

if ta.change(strategy.position_size) > 0 and ta.change(strategy.closedtrades) > 0
    if high >= shortStopLossPrice
        shortRiskAmount := na
        shortStopLossPrice := na
        shortTakeProfitPrice1 := na
        shortTakeProfitPrice2 := na
        shortTakeProfitPrice3 := na

    if low <= shortTakeProfitPrice1
        shortTakeProfitPrice1 := na

    if low <= shortTakeProfitPrice2
        shortTakeProfitPrice1 := na
        shortTakeProfitPrice2 := na

    if low <= shortTakeProfitPrice3
        shortRiskAmount := na
        shortStopLossPrice := na
        shortTakeProfitPrice1 := na
        shortTakeProfitPrice2 := na
        shortTakeProfitPrice3 := na

shortAvgPrice        = plot(shortStopLossPrice - shortRiskAmount,    "Short AveragePrice", color.green, style = plot.style_circles, offset = 1)
shortStopLossLine    = plot(shortStopLossPrice,    "Short SL",  color.red,   style = plot.style_circles, offset = 1)
shortTakeProfitLine1 = plot(shortTakeProfitPrice1, "Short TP1", color.green, style = plot.style_circles, offset = 1)
shortTakeProfitLine2 = plot(shortTakeProfitPrice2, "Short TP2", #1e7020,     style = plot.style_circles, offset = 1)
shortTakeProfitLine3 = plot(shortTakeProfitPrice3, "Short TP3", #023f04,     style = plot.style_circles, offset = 1)

fill(shortAvgPrice,    shortStopLossLine, color = color.new(color.red, 80))
fill(shortAvgPrice, shortTakeProfitLine1, color = color.new(color.green, 80))
fill(shortAvgPrice, shortTakeProfitLine2, color = color.new(color.green, 80))
fill(shortAvgPrice, shortTakeProfitLine3, color = color.new(color.green, 80))

plotchar(strategy.position_avg_price,       "Debug : strategy.position_avg_price",       "", location = location.top)
plotchar(strategy.position_size,            "Debug : strategy.position_size",            "", location = location.top)
plotchar(strategy.opentrades,               "Debug : strategy.opentrades",               "", location = location.top)
plotchar(strategy.closedtrades,             "Debug : strategy.closedtrades",             "", location = location.top)
plotchar(strategy.equity,                   "Debug : strategy.equity",                   "", location = location.top)
plotchar(ta.change(strategy.position_size), "Debug : ta.change(strategy.position_size)", "", location = location.top)

plotchar(longRiskAmount,              "Debug : longRiskAmount",               "", location = location.top)
plotchar(longTakeProfitPrice1,        "Debug : longTakeProfitPrice11",        "", location = location.top)
plotchar(longTakeProfitPrice2,        "Debug : longTakeProfitPrice12",        "", location = location.top)
plotchar(longTakeProfitPrice3,        "Debug : longTakeProfitPrice13",        "", location = location.top)
plotchar(longStopLossPrice,           "Debug : longStopLossPrice",            "", location = location.top)

plotchar(shortRiskAmount,             "Debug : shortRiskAmount",              "", location = location.top)
plotchar(shortTakeProfitPrice1,       "Debug : shortTakeProfitPrice11",       "", location = location.top)
plotchar(shortTakeProfitPrice2,       "Debug : shortTakeProfitPrice12",       "", location = location.top)
plotchar(shortTakeProfitPrice3,       "Debug : shortTakeProfitPrice13",       "", location = location.top)
plotchar(shortStopLossPrice,          "Debug : shortStopLossPrice",           "", location = location.top)
plotchar(ema,                         "Debug : ema",                          "", location = location.top)
plotchar(adx_orig,                    "Debug : adx_orig",                     "", location = location.top)
plotchar(rsiK,                        "Debug : rsiK",                         "", location = location.top)
plotchar(rsiD,                        "Debug : rsiD",                         "", location = location.top)

///// EMA
// plot(ema, title = "EMA", color = color.rgb(185, 227, 16) )

///// ADX and DI
// plot(diPlus, title = "DI+", color = color.green)
// plot(diMinus, title = "DI-", color = color.red)
// plot(adx_orig, title = "ADX", color = color.maroon)

///// Stoch RSI
// h0 = hline(80, "Upper Band", color=#787B86)
// hline(50, "Middle Band", color=color.new(#787B86, 50))
// h1 = hline(20, "Lower Band", color=#787B86)
// plot(rsiK, "K", color=#2962FF)
// plot(rsiD, "D", color=#FF6D00)
// fill(h0, h1, color=color.rgb(33, 150, 243, 90), title="Background")

///// ATR Stop Loss Finder
// p1 = plot(atrUpperbound, title='ATR Short Stop Loss', color=atrHighLineColor, trackprice=atrPriceLine ? true : false)
// p2 = plot(atrLowerbound, title='ATR Long Stop Loss', color=atrLowLineColor, trackprice=atrPriceLine ? true : false)

///// ATR Stop Loss Finder : Table
// var table Table = table.new(position.bottom_right, 3, 1, border_width=3)
// f_fillCell(_table, _column, _row, _value, _timeframe) =>
//     _cellText = _timeframe + str.tostring(_value, '#.#')
//     table.cell(_table, _column, _row, _cellText, text_color=atrTextColor)
//     table.cell_set_text_color(Table, 1, 0, color.new(atrHighTextColor, transp=0))
//     table.cell_set_text_color(Table, 2, 0, color.new(atrLowTextColor, transp=0))
// if barstate.islast
//     f_fillCell(Table, 0, 0, atr, 'ATR: ')
//     f_fillCell(Table, 1, 0, atrUpperbound, 'H: ')
//     f_fillCell(Table, 2, 0, atrLowerbound, 'L: ')


// //@variable The length of the ATR calculation.
// atrPeriod = input(10, "ATR Length")
// //@variable The ATR multiplier.
// factor = input.float(3.0, "Factor", step = 0.01)
// // Get the direction of the SuperTrend.
// [_, direction] = ta.supertrend(factor, atrPeriod)
// if ta.change(direction) > 0
//     strategy.close_all()